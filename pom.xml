<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>me.z-wave.z-way</groupId>
  <artifactId>z-way</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>z-way</name>
  <url>http://maven.apache.org</url>

  <properties>
   <maven.compiler.source>1.8</maven.compiler.source>
   <maven.compiler.target>1.8</maven.compiler.target>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-libzway</id>
            <phase>package</phase>
            <goals>
              <goal>copy-libzway</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/libzway</outputDirectory>
              <resources>          
                <resource>
                  <directory>z-way-root/libs/</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <configuration>
              <target
                name="jni"
                description="Compile the native code">
                <echo>Generating JNI headers</echo>
                <!-- Does not work with OpenJDK, because Ant javah assumes Sun JVM
                <javah
                  destdir="${project.basedir}/src/main/c++"
                  classpath="${project.build.outputDirectory}">
                  <class name="ie.agisoft.Test"/>
                </javah>
                -->
                <exec executable="javah" >
                  <arg value="-d" />
                  <arg value="${project.basedir}/src/main/c++" />
                  <arg value="-classpath" />
                  <arg value="${project.build.outputDirectory}" />
                  <arg value="-force" />
                  <arg value="ie.agisoft.Test" />
                </exec>

                <exec executable="make" ></exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
