<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>me.z-wave.z-way</groupId>
  <artifactId>z-way</artifactId>
  <packaging>jar</packaging>
  <version>4.1.0</version>
  <name>Z-Way library Java wrapper</name>
  <description>Java wrapper for Z-Wave.Me Z-Way library</description>
  <url>https://z-wave.me/z-way/api</url>
  
  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  
  <organization>
    <name>Z-Wave.Me</name>
    <url>https://z-wave.me/</url>
  </organization>
  
  <scm>
    <connection>scm:git@github.com:Z-Wave-Me/Z-Way-JNI-Wrapper.git</connection>
    <url>https://github.com/Z-Wave-Me/Z-Way-JNI-Wrapper</url>
  </scm>
  
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/Z-Wave-Me/Z-Way-JNI-Wrapper/issues</url>
  </issueManagement>
  
  <developers>
    <developer>
      <id>zme</id>
      <name>Z-Wave.Me</name>
    </developer>
  </developers>
  
  <properties>
    <!-- path to Z-Way folder -->
    <zway.root>/opt/z-way-server</zway.root>
    
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <resources>
      <resource>
        <directory>target/native</directory>
      </resource>
      <resource>
        <directory>target/resources</directory>
      </resource>
    </resources>
            
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <!-- clean rules -->
          <execution>
            <id>autoclean_code</id>
            <phase>clean</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>python2</executable>
              <workingDirectory></workingDirectory>
              <arguments>
                <argument>src/main/scripts/autogenerate_code.py</argument>
                <argument>clean</argument>
                <argument>${zway.root}</argument>
                <argument>src/main/native/jni_zway_wrapper.c</argument>
                <argument>src/main/java/me/zwave/zway/ZWay.java</argument>
              </arguments>    
            </configuration>
         </execution>
          <execution>
            <id>jni_clean</id>
            <phase>clean</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>rm</executable>
              <workingDirectory></workingDirectory>
              <arguments>
                <argument>-f</argument>
                <argument>src/main/native/jni_zway_wrapper.o src/main/native/libjzway.so</argument>
              </arguments>    
            </configuration>
         </execution>

          <!-- generate-sources rules -->
          <execution>
            <id>autogenerate_code</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>python2</executable>
              <workingDirectory></workingDirectory>
              <arguments>
                <argument>src/main/scripts/autogenerate_code.py</argument>
                <argument>generate</argument>
                <argument>${zway.root}</argument>
                <argument>src/main/native/jni_zway_wrapper.c</argument>
                <argument>src/main/java/me/zwave/zway/ZWay.java</argument>
              </arguments>    
            </configuration>
          </execution>
          <execution>
            <id>jni_cc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>cc</executable>
              <workingDirectory></workingDirectory>
              <arguments>
                <argument>-I${zway.root}/libzway</argument>
                <argument>-I/usr/lib/jvm/java-8-openjdk-amd64/include/</argument>
                <argument>-I/usr/lib/jvm/java-8-openjdk-amd64/include/linux</argument>
                <argument>-Wall</argument>
                <argument>-Werror</argument>
                <argument>-Wextra</argument>
                <argument>-c</argument>
                <argument>src/main/native/jni_zway_wrapper.c</argument>
                <argument>-o</argument>
                <argument>src/main/native/jni_zway_wrapper.o</argument>
              </arguments>    
            </configuration>
          </execution>
          <execution>
            <id>jni_ld</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>cc</executable>
              <workingDirectory></workingDirectory>
              <arguments>
                <argument>-L${zway.root}/libs</argument>
                <argument>-shared</argument>
                <argument>-o</argument>
                <argument>src/main/native/libjzway.so</argument>
                <argument>src/main/native/jni_zway_wrapper.o</argument>
                <argument>-lzway</argument>
                <argument>-lzs2</argument>
                <argument>-lzcommons</argument>
                <argument>-lpthread</argument>
                <argument>-lxml2</argument>
                <argument>-lz</argument>
                <argument>-lm</argument>
                <argument>-lcrypto</argument>
                <argument>-larchive</argument>
              </arguments>    
            </configuration>
         </execution>
        </executions>
      </plugin>
      
      <!-- generate-resources rules: copy libs and dictionaries to resources -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-native-libs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/native</outputDirectory>
              <resources>          
                <resource>
                  <directory>${zway.root}/libs</directory>
                  <includes>
                    <include>libzcommons.so</include>
                    <include>libzs2.so</include>
                    <include>libzway.so</include>
                  </includes>
                </resource>
                <resource>
                  <directory>src/main/native</directory>
                  <includes>
                    <include>libjzway.so</include>
                  </includes>
                </resource>
              </resources>              
            </configuration>            
          </execution>
          <execution>
            <id>copy-zway-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/resources</outputDirectory>
              <resources>          
                <resource>
                  <directory>${zway.root}</directory>
                  <includes>
                    <include>config/Defaults.xml</include>
                    <include>config/zddx/.keep</include>
                    <include>translations/*.xml</include>
                    <include>ZDDX/*.xml</include>
                  </includes>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
